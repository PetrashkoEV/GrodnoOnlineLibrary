@using DigitalResourcesLibrary.DataContext.Enums
@model DigitalResourcesLibrary.Models.SearchViewModel

@{
    string action = "";
    switch (Model.TypeSearch)
    {
        case TypeSearchDocuments.Category:
            action = "SearchByCategory";
            break;
        case TypeSearchDocuments.Date:
            action = "SearchByDate";
            break;
        case TypeSearchDocuments.Text:
            action = "SearchByText";
            break;
        case TypeSearchDocuments.Tag:
            action = "SearchByTag";
            break;
    }

    var countLeftAndRight = 2;
    
    var start = 1;
    var countPages = Model.CountPages;
    var finish = Model.CountPages;
    if (countPages > countLeftAndRight*2+1)
    {
        start = Model.VisitedPage - countLeftAndRight;
        if (start < 1)
        {
            start = 1;
        }

        finish = start + countLeftAndRight*2;
        if (finish > countPages)
        {
            finish = countPages;
            start = finish - countLeftAndRight*2;
        }
    }
    
}
<div class="pagination pagination-centered">
    <ul>
        @if (Model.VisitedPage == 1)
        {
            <li class="disabled"><a><</a></li>
        }
        else
        {
            <li>@Html.ActionLink("<", action, new { searchValue = Model.SearchValue, page = 1 }, null)</li>
        }
        
        @if (start > 1)
        {
            <li>@Html.ActionLink("1", action, new {searchValue = Model.SearchValue, page = 1}, null)</li>
        }

        @if (Model.VisitedPage - countLeftAndRight > 2)
        {
            <li>@Html.ActionLink("...", action, new { searchValue = Model.SearchValue, page = start-1 }, null)</li>
        }
        

        @for (int i = start; i <= finish; i++)
        {
            if (i == Model.VisitedPage)
            {
                <li class='active'><a href="javascript:void(0);">@i.ToString()</a></li>
            }
            else
            { 
                <li>@Html.ActionLink(i.ToString(), action, new { searchValue = Model.SearchValue, page = i }, null)</li>
            }
        }
        
        @if (Model.VisitedPage + countLeftAndRight < countPages-1)
        {
            <li>@Html.ActionLink("...", action, new { searchValue = Model.SearchValue, page = finish + 1 }, null)</li>
        }
        
        @if (finish < countPages)
        {
            <li>@Html.ActionLink(countPages.ToString(), action, new {searchValue = Model.SearchValue, page = countPages}, null)</li>
        }

        @if (Model.VisitedPage == Model.CountPages)
        {
            <li class="disabled"><a>></a></li>
        }
        else
        {
            <li>@Html.ActionLink(">", action, new { searchValue = Model.SearchValue, page = Model.CountPages }, null)</li>
        }
    </ul>
</div>
